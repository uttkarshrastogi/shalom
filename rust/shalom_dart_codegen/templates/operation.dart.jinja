{% include "macros" %}
{% if schema.context.types.enums | length > 0 or schema.context.types.inputs | length > 0%}
import "schema.shalom.dart";
{% endif %}
import 'package:shalom_core/shalom_core.dart';
{% for import in custom_scalar_imports %}
import 'package:{{ import }}';
{% endfor %}

{% set operation_name = operation.context.operation_name %}
{% macro base_object_impl(typename, selections) %}
    /// class members
    {% for selection in selections -%}
        {% set selection_name = selection.selection_name %}
        {% if selection.kind == "Object" %}
            final {{ type_name_for_selection(selection) }} {{ selection_name }};
        {% elif selection.kind == "Scalar" %}
            final {{ type_name_for_selection(selection) }} {{ selection_name }};
        {% elif selection.kind == "Enum" %}
            final {{ type_name_for_selection(selection) }} {{ selection_name }};
        {% else %}
            throw NotImplemented();
        {% endif %}
    {% endfor %}
    // keywordargs constructor
    {{ typename }}({
    {% for selection in selections -%}
        {% if not selection.is_optional %}required{% endif %}
        this.{{ selection.selection_name }},
    {% endfor %}
    });
    static {{ typename }} fromJson(JsonObject data) {
    {% for selection in selections -%}
        {% set selection_name = selection.selection_name %}
        {% if selection.kind == "Object" %}
            final {{ type_name_for_selection(selection) }} {{ selection_name }}_value;
            {% if selection.is_optional %}
                final JsonObject? {{ selection_name }}$raw = data['{{ selection_name }}']; 
                if ({{ selection_name }}$raw != null) {
                    {{ selection_name }}_value = {{ selection.full_name }}.fromJson({{ selection_name }}$raw);
                } else {
                    {{ selection_name }}_value = null;
                }
            {% else %}
                {{ selection_name }}_value = {{ selection.full_name }}.fromJson(data['{{ selection_name }}']);            
            {% endif %}
        {% elif selection.kind == "Scalar" %}
            {% if is_custom_scalar_selection(selection) %}
                final {{ type_name_for_selection(selection) }} {{ selection_name }}_value = {{ scalar_impl_for_selection(selection) }}.deserialize(data['{{ selection_name }}']);
            {% else %}
                final {{ type_name_for_selection(selection) }} {{ selection_name }}_value = data['{{ selection_name }}'];
            {% endif %}
        {% elif selection.kind == "Enum" %}
            {% set typename = selection.concrete_type.name %}
            final {{ type_name_for_selection(selection) }} {{ selection_name }}_value;
            {% if selection.is_optional %}
                final String? {{ selection_name }}$raw = data['{{ selection_name }}']; 
                if ({{ selection_name }}$raw != null) {
                    {{ selection_name }}_value = {{ typename }}.fromString({{ selection_name }}$raw);
                } else {
                    {{ selection_name }}_value = null;
                }
            {% else %}
                {{ selection_name }}_value = {{ typename }}.fromString(data['{{ selection_name }}']);            
            {% endif %}
        {% else %}
            throw NotImplemented();
        {% endif %}
    {% endfor %}
    return {{ typename }}(
    {% for selection in selections %}
        {% set selection_name = selection.selection_name %}
        {{ selection_name }}: {{ selection_name }}_value,
    {% endfor %}
    );
    }
    {{ typename }} updateWithJson(JsonObject data) {
    {% for selection in selections -%}
        {% set selection_name = selection.selection_name %}
        {% if selection.kind == "Object" %}
        final {{ type_name_for_selection(selection) }} {{ selection_name }}_value;
        if (data.containsKey('{{ selection_name }}')) {
            {% if selection.is_optional %}
                final JsonObject? {{ selection_name }}$raw = data['{{ selection_name }}']; 
                if ({{ selection_name }}$raw != null) {
                    {{ selection_name }}_value = {{ selection.full_name }}.fromJson({{ selection_name }}$raw);
                } else {
                    {{ selection_name }}_value = null;
                }
            {% else %}
                {{ selection_name }}_value = {{ selection.full_name }}.fromJson(data['{{ selection_name }}']);            
            {% endif %}
        } else {
            {{ selection_name }}_value = {{ selection_name }};
        }
        {% elif selection.kind == "Scalar" %}
            final {{ type_name_for_selection(selection) }} {{ selection_name }}_value;
            if (data.containsKey('{{ selection_name }}')) {
                {% if is_custom_scalar_selection(selection) %}
                    {{ selection_name }}_value = {{ scalar_impl_for_selection(selection) }}.deserialize(data['{{ selection_name }}']);
                {% else %}
                    {{ selection_name }}_value = data['{{ selection_name }}'];
                {% endif %}
            } else {
                {{ selection_name }}_value = {{ selection_name }};
            }
        {% elif selection.kind == "Enum" %}
            {% set typename = selection.concrete_type.name %}
            final {{ type_name_for_selection(selection) }} {{ selection_name }}_value;
            if (data.containsKey('{{ selection_name }}')) {
                {% if selection.is_optional %}
                    final String? {{ selection_name }}$raw = data['{{ selection_name }}']; 
                    if ({{ selection_name }}$raw != null) {
                        {{ selection_name }}_value = {{ typename }}.fromString({{ selection_name }}$raw);
                    } else {
                        {{ selection_name }}_value = null;
                    }
                {% else %}
                    {{ selection_name }}_value = {{ typename }}.fromString(data['{{ selection_name }}']);            
                {% endif %}
            } else {
                {{ selection_name }}_value = {{ selection_name }};
            }
        {% else %}
            throw NotImplemented();
        {% endif %}
    {% endfor %}
    return {{ typename }}(
    {% for selection in selections %}
        {% set selection_name = selection.selection_name %}
        {{ selection_name }}: {{ selection_name }}_value,
    {% endfor %}
    );
    }
    @override
    bool operator ==(Object other) {
    return identical(this, other) ||
    (other is {{ typename }} &&
    {% for selection in selections -%}
        {% set selection_name = selection.selection_name %}
        other.{{ selection_name }} == {{ selection_name }} {{ "&&"|if_not_last(loop.last) }}
    {% endfor %}
    );
    }
    @override
    int get hashCode =>
    {% if selections | length > 1 %}
        Object.hashAll([
        {% for selection in selections %}
            {% set selection_name = selection.selection_name %}
            {{ selection_name }},
        {% endfor %}
        ]);
    {% else %}
        {{ (selections | first).selection_name }}.hashCode;
    {% endif %}
    JsonObject toJson() {
    return {
    {% for selection in selections %}
        {% set selection_name = selection.selection_name %}
        '{{ selection_name }}':
            {% if selection.kind == "Object" %}
                {{ selection_name }}{% if selection.is_optional %}?{% endif %}.toJson()
            {% elif selection.kind == "Scalar" %}
                {% if is_custom_scalar_selection(selection) %}
                    {% if selection.is_optional %}
                        {{ selection_name }} != null ? {{ scalar_impl_for_selection(selection) }}.serialize({{ selection_name }}!) : null
                    {% else %}
                        {{ scalar_impl_for_selection(selection) }}.serialize({{ selection_name }})
                    {% endif %}
                {% else %}
                    {{ selection_name }}
                {% endif %}
            {% elif selection.kind == "Enum" %}
                {{ selection_name }}{% if selection.is_optional %}?{% endif %}.name  
            {% else %}
                throw NotImplemented();
            {% endif %}
        ,
    {% endfor %}
    };
    }
{% endmacro %}
typedef JsonObject = Map<String, dynamic>;
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types



{% set root_type_name = operation_name ~ "Response" %}
class {{ root_type_name }}{
{{ base_object_impl(root_type_name, operation.context.root_type.selections) }}
}

// ------------ OBJECT DEFINITIONS -------------

{% for full_name, selection in operation.context.type_defs | items  if selection.kind == "Object" %}
    class {{ full_name }}  {
        {{ base_object_impl(full_name, selection.selections) }}
    }
{% endfor %}

// ------------ END OBJECT DEFINITIONS -------------

{% set op_variables = operation.context.variables %}
class Request{{ operation_name }} extends Requestable {
    {% if op_variables | length > 0 %}
    final {{ operation_name }}Variables variables;
    {% endif %}

    Request{{ operation_name }}(
        {% if op_variables | length > 0 %}
        {
            required this.variables,
        } 
        {% endif %}
    );

    @override
    Request toRequest() {
        JsonObject variablesJson = {% if op_variables | length > 0 %} variables.toJson() {% else %} {}  {% endif %};
        return Request(
            query: r"""{{ operation.context.query }}""", 
            variables: variablesJson, 
            opType: OperationType.{{ operation.context.op_ty.name }}, 
            StringopName: '{{ operation_name }}'
        );
    }
}

{% if op_variables | length > 0 %}
class {{ operation_name }}Variables {
    {% for name, variable in op_variables | items %}
        final {{ type_name_for_field(variable) }} {{ name }};
    {% endfor %}

    {{ operation_name }}Variables(
        {% if op_variables | length > 0 %}
            {
            {{ field_initialization_logic(op_variables) }} 
            }
        {% endif %}
    );

    JsonObject toJson() {
        JsonObject data = {};
        {{ field_to_json_logic(op_variables) }}    
        return data;
    } 
}
{% endif %}
