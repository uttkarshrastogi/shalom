// ignore_for_file: constant_identifier_names
{% include "macros" %}
{% if schema.context.types.inputs | length > 0 %}
import 'package:shalom_core/shalom_core.dart';
{% endif %}
{% for import in custom_scalar_imports %}
import 'package:{{ import }}';
{% endfor %}

// ------------ Enum DEFINITIONS -------------
{% for _, enum in schema.context.types.enums | items %}
     {% set typename = enum.name %}
     {{docstring(enum.description)}}
     enum {{ typename }}  {
          {% for name, value in enum.members | items -%}  
                {{docstring(value.description)}}
                {{ name }} {{value_or_last(",", ";", loop.last)}}
          {% endfor %}
          
          static {{ typename }} fromString(String name) {
              switch (name) {
                  {% for name, _ in enum.members | items %}
                  case '{{ name }}':
                    return {{ typename }}.{{name}};                   {% endfor %}
                  default:  
                      throw ArgumentError.value(name, 'name', 'No Status enum member with this name');  
              }
          }

      }
{% endfor %}
// ------------ END Enum DEFINITIONS -------------
// ------------ Input DEFINITIONS -------------
{% for _, input_object in schema.context.types.inputs | items %}
{% set typename = input_object.name %}
class {{ typename }} {
    {% set fields = input_object.fields %}
    {% for name, field in fields | items %}
        final {{ type_name_for_field(field) }} {{ name }}; 
    {% endfor %}
    {{ typename }}(
        {
        {{ field_initialization_logic(fields) }} 
        }
    );

    JsonObject toJson() {
        JsonObject data = {};
        {{ field_to_json_logic(fields) }}    
        return data;
    } 
}
     
{% endfor %}
// ------------ END Input DEFINITIONS -------------
